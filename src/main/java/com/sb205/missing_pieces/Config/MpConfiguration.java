package com.sb205.missing_pieces.Config;

import net.minecraft.block.material.Material;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.common.config.Property;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Loader;
import net.minecraftforge.fml.common.eventhandler.EventPriority;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import com.sb205.missing_pieces.MissingPieces;
import com.sb205.missing_pieces.MpBlocks.BlockCandelabra;
import com.sb205.missing_pieces.Utilities.BlockInfo;
import com.sb205.missing_pieces.Utilities.BlockInfo.BlockType;

/**
 * Holds the configuration information and synchronises the various copies of it
 * The configuration information is stored in three places:
 * 1) in the configuration file on disk, as text
 * 2) in the Configuration object config (accessed by the mod GUI), as text
 * 3) in the MBEConfiguration variables (fields), as native values (integer, double, etc)
 * Usage:
 * Setup:
 * (1) During your mod init(), call MpConfiguration.init() to
 *    a) set up the format of the configuration file
 *    b) load the settings from the existing file, or if it doesn't exist yet - create it with default values
 * (2) On the client proxy (not dedicated server), call clientInit() to register an OnConfigChangedEvent handler-
       your GUI will modify the config object, and when it is closed it will trigger a OnConfigChangedEvent, which
 *     should call syncFromGUI().
 *
 * Usage:
 * (3) You can read the fields such as myInteger directly
 * (4) If you modify the configuration fields, you can save them to disk using syncFromFields()
 * (5) To reload the values from disk, call syncFromFile()
 * (6) If you have used a GUI to alter the config values, call syncFromGUI().  (If you called clientInit(), this
 *     will happen automatically)
 *
 * See ForgeModContainer for more examples
 */
public class MpConfiguration {

	// attempt to use Enum to make it simpler to add items here.
    private static final boolean SLAB_DEFAULT_VALUE = true;
    private static final boolean MISC_DEFAULT_VALUE = true;
    private static final boolean WEDGE_DEFAULT_VALUE = true;
    private static final boolean CHAIR_DEFAULT_VALUE = true;
    private static final boolean SHELF_DEFAULT_VALUE = true;
    private static final boolean CANDELABRA_DEFAULT_VALUE = true;
    private static final boolean TABLE_DEFAULT_VALUE = true;
    private static final boolean LAMP_DEFAULT_VALUE = true;
    private static final boolean LOG_DEFAULT_VALUE = true;
    private static final boolean PILLAR_DEFAULT_VALUE = true;
    public static final String CATEGORY_NAME_CHAIRS = "category_chairs";
    public static final String CATEGORY_NAME_TABLES = "category_tables";
    public static final String CATEGORY_NAME_LAMPS = "category_lamps";
    public static final String CATEGORY_NAME_SHELVES = "category_shelves";
    public static final String CATEGORY_NAME_CANDELABRAS = "category_candelabras";
    public static final String CATEGORY_NAME_PILLARS = "category_pillars";
    public static final String CATEGORY_NAME_WEDGES = "category_wedges";
    public static final String CATEGORY_NAME_SLABS = "category_slabs";
    public static final String CATEGORY_NAME_MISC = "category_misc";
    public static final String CATEGORY_NAME_NATURA_CHAIRS = "category_natura_chairs";
    public static final String CATEGORY_NAME_NATURA_TABLES = "category_natura_tables";
    public static final String CATEGORY_NAME_NATURA_LAMPS = "category_natura_lamps";
    public static final String CATEGORY_NAME_NATURA_SHELVES = "category_natura_shelves";
    public static final String CATEGORY_NAME_NATURA_CANDELABRAS = "category_natura_candelabras";
    public static final String CATEGORY_NAME_NATURA_PILLARS = "category_natura_pillars";
    public static final String CATEGORY_NAME_NATURA_WEDGES = "category_natura_wedges";
    public static final String CATEGORY_NAME_BASEM_LAMPS = "category_base_metal_lamps";
    public static final String CATEGORY_NAME_BASEM_CANDELABRAS = "category_base_metal_candelabras";
    public static final String CATEGORY_NAME_MINERAL_PILLARS = "category_mineralogy_pillars";
    public static final String CATEGORY_NAME_MINERAL_WEDGES = "category_mineralogy_wedges";


    private enum ModType {
    		MOD_MISSING_PIECES,
    		MOD_MINERALOGY,
    		MOD_BASE_METALS,
    		MOD_BIOMES_O_PLENTY,
    		MOD_NATURA,
    		MOD_CONFIG_VALUE
    }
    public  enum ConfigInfo {
		//		Name					Category				Mod Type 			Enable/Disable
		WEDGE_QTY("Wedge Quantity", CATEGORY_NAME_WEDGES, ModType.MOD_CONFIG_VALUE, 3, 3, 6),
		MISC_SPINDLE("Spindle",			CATEGORY_NAME_MISC,		ModType.MOD_MISSING_PIECES,	MISC_DEFAULT_VALUE),

		// ---- Logs ----
		LOG_ACACIA("acacia_log",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
		LOG_BIRCH("birch_log",				CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
		LOG_DARK_OAK("dark_oak_log",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
		LOG_JUNGLE("jungle_log",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
		LOG_OAK("oak_log",					CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
		LOG_SPRUCE("spruce_log",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	LOG_DEFAULT_VALUE	),
    	// natura Woods
    	LOG_AMARANTH("amaranth_log",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_DARKWOOD("darkwood_log",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_EUCALYPTUS("eucalyptus_log",	CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_FUSEWOOD("fusewood_log",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_GHOSTWOOD("ghostwood_log",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_HOPSEED("hopseed_log",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_MAPLE("maple_log",				CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_REDWOOD("redwood_log",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_SAKURA("sakura_log",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_SILVERBELL("silverbell_log",	CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_TIGER("tiger_log",				CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),
    	LOG_WILLOW("willow_log",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	LOG_DEFAULT_VALUE),

	    // ---- Pillars -----
		PILLAR_STONE("stone_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_STONEBRICK("stonebrick_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_PURPUR("purpur_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_COBBLESTONE("cobblestone_pillar",CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_GRANITE("granite_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_ANDESITE("andesite_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_DIORITE("diorite_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_P_GRANITE("p_granite_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_P_ANDESITE("p_andesite_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_P_DIORITE("p_diorite_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_OBSIDIAN("obsidian_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_QUARTZ("quartz_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_ACACIA("acacia_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_BIRCH("birch_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_DARK_OAK("dark_oak_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_JUNGLE("jungle_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_OAK("oak_pillar",				CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_SPRUCE("spruce_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_SANDSTONE("sandstone_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_RED_SANDSTONE("red_sandstone_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_NETHER_BRICK("nether_brick_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_END_STONE("end_stone_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_BLACK_CLAY("black_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_BLUE_CLAY("blue_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_BROWN_CLAY("brown_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_CYAN_CLAY("cyan_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_GRAY_CLAY("gray_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_GREEN_CLAY("green_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_LIGHT_BLUE_CLAY("light_blue_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_LIGHT_GRAY_CLAY("light_gray_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_LIME_CLAY("lime_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_MAGENTA_CLAY("magenta_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_ORANGE_CLAY("orange_clay_pillar",CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_PINK_CLAY("pink_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_PURPLE_CLAY("purple_clay_pillar",CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_RED_CLAY("red_clay_pillar",		CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_WHITE_CLAY("white_clay_pillar",	CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_YELLOW_CLAY("yellow_clay_pillar",CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
		PILLAR_GLASS("glass_pillar",			CATEGORY_NAME_PILLARS, ModType.MOD_MISSING_PIECES,	PILLAR_DEFAULT_VALUE	),
    	// natura Woods
    	PILLAR_AMARANTH("amaranth_pillar",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_DARKWOOD("darkwood_pillar",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_EUCALYPTUS("eucalyptus_pillar",	CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_FUSEWOOD("fusewood_pillar",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_GHOSTWOOD("ghostwood_pillar",		CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_HOPSEED("hopseed_pillar",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_MAPLE("maple_pillar",				CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_REDWOOD("redwood_pillar",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SAKURA("sakura_pillar",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SILVERBELL("silverbell_pillar",	CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_TIGER("tiger_pillar",				CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),
    	PILLAR_WILLOW("willow_pillar",			CATEGORY_NAME_NATURA_PILLARS,	ModType.MOD_NATURA,	PILLAR_DEFAULT_VALUE),


	    // ---- Candelabras -----
		CANDELABRA_ACACIA("acacia_candelabra",	CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_BIRCH("birch_candelabra",	CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_DARK_OAK("dark_oak_candelabra",CATEGORY_NAME_CANDELABRAS,ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_JUNGLE("jungle_candelabra",	CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_OAK("oak_candelabra",		CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_SPRUCE("spruce_candelabra",	CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_GOLD("gold_candelabra",		CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
		CANDELABRA_IRON("iron_candelabra",		CATEGORY_NAME_CANDELABRAS, ModType.MOD_MISSING_PIECES,	CANDELABRA_DEFAULT_VALUE	),
	    // ---- Shelves -----
		SHELF_ACACIA("acacia_shelf",		CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
		SHELF_BIRCH("birch_shelf",			CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
		SHELF_DARK_OAK("dark_oak_shelf",	CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
		SHELF_JUNGLE("jungle_shelf",		CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
		SHELF_OAK("oak_shelf",				CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
		SHELF_SPRUCE("spruce_shelf",		CATEGORY_NAME_SHELVES,	ModType.MOD_MISSING_PIECES,	SHELF_DEFAULT_VALUE),
    	SHELF_AMARANTH("amaranth_shelf",		CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_DARKWOOD("darkwood_shelf",		CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_EUCALYPTUS("eucalyptus_shelf",	CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_FUSEWOOD("fusewood_shelf",		CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_GHOSTWOOD("ghostwood_shelf",	CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_HOPSEED("hopseed_shelf",		CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_MAPLE("maple_shelf",			CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_REDWOOD("redwood_shelf",		CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_SAKURA("sakura_shelf",			CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_SILVERBELL("silverbell_shelf",	CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_TIGER("tiger_shelf",			CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),
    	SHELF_WILLOW("willow_shelf",			CATEGORY_NAME_NATURA_SHELVES,	ModType.MOD_NATURA,	SHELF_DEFAULT_VALUE),

	    // ---- Lamps -----
		LAMP_ACACIA("acacia_lamp",		CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_BIRCH("birch_lamp",		CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_DARK_OAK("dark_oak_lamp",	CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_JUNGLE("jungle_lamp",		CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_OAK("oak_lamp",			CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_SPRUCE("spruce_lamp",		CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_GOLD("gold_lamp",			CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		LAMP_IRON("iron_lamp",			CATEGORY_NAME_LAMPS,	ModType.MOD_MISSING_PIECES,	LAMP_DEFAULT_VALUE),
		// ---- Tables ----
		TABLE_ACACIA("acacia_table",	CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
		TABLE_BIRCH("birch_table",		CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
		TABLE_DARK_OAK("dark_oak_table",CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
		TABLE_JUNGLE("jungle_table",	CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
		TABLE_OAK("oak_table",			CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
		TABLE_SPRUCE("spruce_table",	CATEGORY_NAME_TABLES,	ModType.MOD_MISSING_PIECES,	TABLE_DEFAULT_VALUE),
    	// natura Woods
    	TABLE_AMARANTH("amaranth_table",		CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_DARKWOOD("darkwood_table",		CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_EUCALYPTUS("eucalyptus_table",	CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_FUSEWOOD("fusewood_table",		CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_GHOSTWOOD("ghostwood_table",	CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_HOPSEED("hopseed_table",		CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_MAPLE("maple_table",			CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_REDWOOD("redwood_table",		CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_SAKURA("sakura_table",			CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_SILVERBELL("silverbell_table",	CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_TIGER("tiger_table",			CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),
    	TABLE_WILLOW("willow_table",			CATEGORY_NAME_NATURA_TABLES,	ModType.MOD_NATURA,	TABLE_DEFAULT_VALUE),

	    // ---- Chairs -----
		
		CHAIR_ACACIA("acacia_chair",	CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
		CHAIR_BIRCH("birch_chair",		CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
		CHAIR_DARK_OAK("dark_oak_chair",CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
		CHAIR_JUNGLE("jungle_chair",	CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
		CHAIR_OAK("oak_chair",			CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
		CHAIR_SPRUCE("spruce_chair",	CATEGORY_NAME_CHAIRS,	ModType.MOD_MISSING_PIECES,	CHAIR_DEFAULT_VALUE),
    	// natura Woods
    	CHAIR_AMARANTH("amaranth_chair",		CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_DARKWOOD("darkwood_chair",		CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_EUCALYPTUS("eucalyptus_chair",	CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_FUSEWOOD("fusewood_chair",		CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_GHOSTWOOD("ghostwood_chair",	CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_HOPSEED("hopseed_chair",		CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_MAPLE("maple_chair",			CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_REDWOOD("redwood_chair",		CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_SAKURA("sakura_chair",			CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_SILVERBELL("silverbell_chair",	CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_TIGER("tiger_chair",			CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	CHAIR_WILLOW("willow_chair",			CATEGORY_NAME_NATURA_CHAIRS,	ModType.MOD_NATURA,	CHAIR_DEFAULT_VALUE),
    	

		SLABPATT1("stone_patt1_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT2("stone_patt2_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT3("stone_patt3_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT4("stone_patt4_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT5("stone_patt5_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT6("stone_patt6_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT7("stone_patt7_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT8("stone_patt8_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT9("stone_patt9_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT10("stone_patt10_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT11("stone_patt11_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		SLABPATT12("stone_patt12_slab",	CATEGORY_NAME_SLABS,	ModType.MOD_MISSING_PIECES,	SLAB_DEFAULT_VALUE),
		// ---- Wedges -----
		WEDGE_STONE("stone_wedge",				CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_STONEBRICK("stonebrick_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_PURPUR("purpur_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_COBBLESTONE("cobblestone_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GRANITE("granite_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_OBSIDIAN("osidian_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_ANDESITE("andesite_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_DIORITE("diorite_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_P_GRANITE("p_granite_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_P_ANDESITE("p_andesite_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_P_DIORITE("obsidian_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_QUARTZ("quartz_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_ACACIA("acacia_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_BIRCH("birch_wedge",				CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_DARK_OAK("dark_oak_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_JUNGLE("jungle_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_OAK("oak_wedge",					CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_SPRUCE("spruce_wedge",			CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_SANDSTONE("sandstone_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_RED_SANDSTONE("red_sandstone_wedge",CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_NETHER_BRICK("nether_brick_wedge",CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_END_STONE("end_stone_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_BLACK_CLAY("black_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_BLUE_CLAY("blue_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_BROWN_CLAY("brown_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_CYAN_CLAY("cyan_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GRAY_CLAY("gray_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GREEN_CLAY("green_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_LIGHT_BLUE_CLAY("light_blue_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_LIGHT_GRAY_CLAY("light_gray_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_LIME_CLAY("lime_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_MAGENTA_CLAY("magenta_clay_wedge",CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_ORANGE_CLAY("orange_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_PINK_CLAY("pink_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_PURPLE_CLAY("purple_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_RED_CLAY("red_clay_wedge",		CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_WHITE_CLAY("white_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_YELLOW_CLAY("yellow_clay_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GLASS("glass_wedge",				CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_HAY("hay_wedge",					CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_DIRT("dirt_wedge",				CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GRASS("grass_wedge",				CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
		WEDGE_GRASS_PATH("grass_path_wedge",	CATEGORY_NAME_WEDGES,	ModType.MOD_MISSING_PIECES,	WEDGE_DEFAULT_VALUE),
      	// ---- Mineralogy wedges ----
    	WEDGE_AMPHIBOLITE("amphibolite_wedge",			CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_AMPHIBOLITE_SMOOTH("amphibolite_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_ANDESITE("m_andesite_wedge",			CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_ANDESITE_SMOOTH("m_andesite_smooth_wedge",	CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_BASALT("basalt_wedge",					CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_BASALT_SMOOTH("basalt_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_CHERT("chert_wedge",						CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_CONGLOMERATE("conglomerate_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_CONGLOMERATE_SMOOTH("conglomerate_smooth_wedge",	CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_DIORITE("m_diorite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_DIORITE_SMOOTH("m_diorite_smooth_wedge",CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_DOLOMITE("dolomite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_DOLOMITE_SMOOTH("dolomite_smooth_wedge",	CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_GNEISS("gneiss_wedge",					CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_GNEISS_SMOOTH("gneiss_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_GRANITE("m_granite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_M_GRANITE_SMOOTH("m_granite_smooth_wedge",CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_LIMESTONE("limestone_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_LIMESTONE_SMOOTH("limestone_smooth_wedge",CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_MARBLE("marble_wedge",					CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_MARBLE_SMOOTH("marble_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_PUMICE("pumice_wedge",					CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_PEGMATITE("pegmatite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_PEGMATITE_SMOOTH("pegmatite_smooth_wedge",CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_PHYLLITE("rhyolite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_PHYLLITE_SMOOTH("rhyolite_smooth_wedge",	CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_RHYOLITE("rhyolite_wedge",				CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_RHYOLITE_SMOOTH("rhyolite_smooth_wedge",	CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SCHIST("schist_wedge",					CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SCHIST_SMOOTH("schist_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SHALE("shale_wedge",						CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SHALE_SMOOTH("shale_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SLATE("slate_wedge",						CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SLATE_SMOOTH("slate_smooth_wedge",		CATEGORY_NAME_MINERAL_WEDGES,	ModType.MOD_MINERALOGY,	WEDGE_DEFAULT_VALUE),
    	// natura Woods
    	WEDGE_AMARANTH("amaranth_wedge",		CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_DARKWOOD("darkwood_wedge",		CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_EUCALYPTUS("eucalyptus_wedge",	CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_FUSEWOOD("fusewood_wedge",		CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_GHOSTWOOD("ghostwood_wedge",	CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_HOPSEED("hopseed_wedge",		CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_MAPLE("maple_wedge",			CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_REDWOOD("redwood_wedge",		CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SAKURA("sakura_wedge",			CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_SILVERBELL("silverbell_wedge",	CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_TIGER("tiger_wedge",			CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),
    	WEDGE_WILLOW("willow_wedge",			CATEGORY_NAME_NATURA_WEDGES,	ModType.MOD_NATURA,	WEDGE_DEFAULT_VALUE),

    	// ---- mineralogy pillars ---- 
    	PILLAR_AMPHIBOLITE("amphibolite_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_AMPHIBOLITE_SMOOTH("amphibolite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_ANDESITE("m_andesite_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_ANDESITE_SMOOTH("m_andesite_smooth_pillar",CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_BASALT("basalt_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_BASALT_SMOOTH("basalt_smooth_pillar",		CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_CHERT("chert_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_CONGLOMERATE("conglomerate_pillar",			CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_CONGLOMERATE_SMOOTH("conglomerate_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_DIORITE("m_diorite_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_DIORITE_SMOOTH("m_diorite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_DOLOMITE("dolomite_pillar",					CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_DOLOMITE_SMOOTH("dolomite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_GNEISS("gneiss_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_GNEISS_SMOOTH("gneiss_smooth_pillar",		CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_GRANITE("m_granite_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_M_GRANITE_SMOOTH("m_granite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_LIMESTONE("limestone_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_LIMESTONE_SMOOTH("limestone_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_MARBLE("marble_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_MARBLE_SMOOTH("marble_smooth_pillar",		CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_PUMICE("pumice_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_PHYLLITE("phyllite_pillar",					CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_PHYLLITE_SMOOTH("phyllite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_PEGMATITE("pegmatite_pillar",				CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_PEGMATITE_SMOOTH("pegmatite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_RHYOLITE("rhyolite_pillar",					CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_RHYOLITE_SMOOTH("rhyolite_smooth_pillar",	CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SCHIST("schist_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SCHIST_SMOOTH("schist_smooth_pillar",		CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SHALE("shale_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SHALE_SMOOTH("shale_smooth_pillar",			CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SLATE("slate_pillar",						CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	PILLAR_SLATE_SMOOTH("slate_smooth_pillar",			CATEGORY_NAME_MINERAL_PILLARS,	ModType.MOD_MINERALOGY,	PILLAR_DEFAULT_VALUE),
    	
    	// ---- Base Metals Lamps
    	LAMP_ADAMANTINE("adamantine_lamp",	CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_AQUARIUM("aquarium_lamp",		CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_BRASS("brass_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_BRONZE("bronze_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_COLD_IRON("cold_iron_lamp",	CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_COPPER("copper_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_ELECTRUM("electrum_lamp",		CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_INVAR("invar_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_LEAD("lead_lamp",				CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_MITHRIL("mithril_lamp",		CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_NICKEL("nickel_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_SILVER("silver_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_STAR_STEEL("star_steel_lamp",	CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_STEEL("steel_lamp",			CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_TIN("tin_lamp",				CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),
    	LAMP_ZINC("zinc_lamp",				CATEGORY_NAME_BASEM_LAMPS,	ModType.MOD_BASE_METALS,	LAMP_DEFAULT_VALUE),

    	// natura Woods
    	LAMP_AMARANTH("amaranth_lamp",		CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_DARKWOOD("darkwood_lamp",		CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_EUCALYPTUS("eucalyptus_lamp",	CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_FUSEWOOD("fusewood_lamp",		CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_GHOSTWOOD("ghostwood_lamp",	CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_HOPSEED("hopseed_lamp",		CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_MAPLE("maple_lamp",			CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_REDWOOD("redwood_lamp",		CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_SAKURA("sakura_lamp",			CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_SILVERBELL("silverbell_lamp",	CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_TIGER("tiger_lamp",			CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	LAMP_WILLOW("willow_lamp",			CATEGORY_NAME_NATURA_LAMPS,	ModType.MOD_NATURA,	LAMP_DEFAULT_VALUE),
    	
    	CANDELABRA_ADAMANTINE("adamantine_candelabra",	CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_AQUARIUM("aquarium_candelabra",		CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_BRASS("brass_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_BRONZE("bronze_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_COLD_IRON("cold_iron_candelabra",	CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_COPPER("copper_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_ELECTRUM("electrum_candelabra",		CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_INVAR("invar_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_LEAD("lead_candelabra",				CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_MITHRIL("mithril_candelabra",		CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_NICKEL("nickel_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_SILVER("silver_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_STAR_STEEL("star_steel_candelabra",	CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_STEEL("steel_candelabra",			CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_TIN("tin_candelabra",				CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_ZINC("zinc_candelabra",				CATEGORY_NAME_BASEM_CANDELABRAS,	ModType.MOD_BASE_METALS,	CANDELABRA_DEFAULT_VALUE),

    	// natura Woods
    	CANDELABRA_AMARANTH("amaranth_candelabra",		CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_DARKWOOD("darkwood_candelabra",		CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_EUCALYPTUS("eucalyptus_candelabra",	CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_FUSEWOOD("fusewood_candelabra",		CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_GHOSTWOOD("ghostwood_candelabra",	CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_HOPSEED("hopseed_candelabra",		CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_MAPLE("maple_candelabra",			CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_REDWOOD("redwood_candelabra",		CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_SAKURA("sakura_candelabra",			CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_SILVERBELL("silverbell_candelabra",	CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_TIGER("tiger_candelabra",			CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE),
    	CANDELABRA_WILLOW("willow_candelabra",			CATEGORY_NAME_NATURA_CANDELABRAS,	ModType.MOD_NATURA,	CANDELABRA_DEFAULT_VALUE);
    	
    	private String configName;
		private String configCat;
		private Boolean enabled;
		private ModType mod;
		private int defInt;
		private int minInt;
		private int maxInt;
		
		private  ConfigInfo( String name, String category, ModType modType, Boolean enable){
			configName = name;
			configCat = category;
			enabled = enable;
			mod = modType;
		}
		private ConfigInfo( String name, String category, ModType modType, int defValue, int minValue, int maxValue){
			configName = name;
			configCat = category;
			mod = modType;
			defInt = defValue;
			minInt = minValue;
			maxInt = maxValue;

		}
		public String getName() {
			return configName;
		}
		public String getCategory() {
			return configCat;
		}
		public Boolean getEnable() {
			return enabled;
		}
		public ModType getMod() {
			return mod;
		}
		public int getDefInt() {
			return defInt;
		}
		public int getMin() {
			return minInt;
		}
		public int getMax() {
			return maxInt;
		}
	};
	private static int configQty = ConfigInfo.values().length;
	public static Boolean[] BlockEnable = new Boolean[configQty];
	public static Property[] ConfigProperty = new Property[configQty];
	public static int[] ConfigValue = new int[1];
  
  public static void init() {
  /*
   * Here is where you specify the location from where your config file will be read, or
   * 	created if it is not present.
   * Loader.instance().getConfigDir() returns the default config directory and you specify
   * 	the name of the config file, together this works similar to the old getSuggestedConfigurationFile() function
   */
    File configFile = new File(Loader.instance().getConfigDir(), "MisingPieces-4.1.cfg");
    //initialize your configuration object with your configuration file values
    config = new Configuration(configFile);

    //load config from file (see mbe70 package for more info)
    syncFromFile();
  }

  public static void clientInit() {
    //register the save config handler to the forge mod loader event bus
    // creates an instance of the static class ConfigEventHandler and has it listen
    // on the FML bus (see Notes and ConfigEventHandler for more information)
    MinecraftForge.EVENT_BUS.register(new ConfigEventHandler());
	  //FMLCommonHandler.instance().bus().register(new ConfigEventHandler());
  }

  public static Configuration getConfig()
  {
    return config;
  }

  /**
   * load the configuration values from the configuration file
   */
  public static void syncFromFile()
  {
    syncConfig(true, true);
  }

  /**
   * save the GUI-altered values to disk
   */
  public static void syncFromGUI()
  {
    syncConfig(false, true);
  }

  /**
   * save the MBEConfiguration variables (fields) to disk
   */
  public static void syncFromFields()
  {
    syncConfig(false, false);
  }

  /**
   * Synchronise the three copies of the data
   * 1) loadConfigFromFile && readFieldsFromConfig -> initialise everything from the disk file
   * 2) !loadConfigFromFile && readFieldsFromConfig --> copy everything from the config file (altered by GUI)
   * 3) !loadConfigFromFile && !readFieldsFromConfig --> copy everything from the native fields
   *
   * @param loadConfigFromFile if true, load the config field from the configuration file on disk
   * @param readFieldsFromConfig if true, reload the member variables from the config field
   */

  private static void syncConfig(boolean loadConfigFromFile, boolean readFieldsFromConfig)
  {
    // ---- step 1 - load raw values from config file (if loadFromFile true) -------------------

		/*Check if this configuration object is the main config file or a child configuration
		 *For simple configuration setups, this only matters if you enable global configuration
		 *	for your configuration object by using config.enableGlobalConfiguration(),
		 *	this will cause your config file to be 'global.cfg' in the default configuration directory
		 *  and use it to read/write your configuration options
		 */
    if (loadConfigFromFile) {
      config.load();
    }

		/* Using language keys are a good idea if you are using a config GUI
		 * This allows you to provide "pretty" names for the config properties
		 * 	in a .lang file as well as allow others to provide other localizations
		 *  for your mod
		 * The language key is also used to get the tooltip for your property,
		 * 	the language key for each properties tooltip is langKey + ".tooltip"
		 *  If no tooltip lang key is specified in a .lang file, it will default to
		 *  the property's comment field
		 * prop.setRequiresWorldRestart(true); and prop.setRequiresMcRestart(true);
		 *  can be used to tell Forge if that specific property requires a world
		 *  or complete Minecraft restart, respectively
		 *  Note: if a property requires a world restart it cannot be edited in the
		 *   in-world mod settings (which hasn't been implemented yet by Forge), only
		 *   when a world isn't loaded
		 *   -See the function definitions for more info
		 */


    // ---- step 2 - define the properties in the configuration file -------------------

    // The following code is used to define the properties in the configuration file-
    //   their name, type, default / min / max values, a comment.  These affect what is displayed on the GUI.
    // If the file already exists, the property values will already have been read from the file, otherwise they
    //  will be assigned the default value.

    Boolean baseMetalsLoaded = false;
    Boolean mineralogyLoaded = false;
    Boolean biopLoaded = false;
    Boolean naturaLoaded = false;
    
    if (Loader.isModLoaded("basemetals")) {
    	baseMetalsLoaded = true;
    }
    if (Loader.isModLoaded("mineralogy")) {
    	mineralogyLoaded = true;
    }
    if (Loader.isModLoaded("biomesoplenty")) {
    	biopLoaded = true;
    }
    if (Loader.isModLoaded("natura")) {
    	naturaLoaded = true;
    }
    for (ConfigInfo item : ConfigInfo.values() ){
    	if( item.getMod()==ModType.MOD_MISSING_PIECES ||
    		((item.getMod()==ModType.MOD_BASE_METALS) && (baseMetalsLoaded == true)) ||
    		((item.getMod()==ModType.MOD_BIOMES_O_PLENTY) && (biopLoaded == true)) ||
    		((item.getMod()==ModType.MOD_NATURA) && (naturaLoaded == true)) ||
        	((item.getMod()==ModType.MOD_MINERALOGY) && (mineralogyLoaded == true)) ) {
        		
	    	//System.out.println("Config "+item.getName()+" which is number "+item.ordinal()+" in the list.");
	    	ConfigProperty[item.ordinal()] = config.get(item.getCategory(), item.getName(), item.getEnable());
	    	ConfigProperty[item.ordinal()].setLanguageKey("tile."+item.getName()+".name").setRequiresMcRestart(true);
    	} else
    	{

    		ConfigProperty[item.ordinal()] = config.get(item.getCategory(), item.getName(), item.getDefInt(), "Number of wedges per recipe.", item.getMin(), item.getMax() );
	    	ConfigProperty[item.ordinal()].setLanguageKey("tile."+item.getName()+".name").setRequiresMcRestart(true);

    	}
    } 
    //By defining a property order we can control the order of the properties in the config file and GUI
    //This is defined on a per config-category basis
    //List<String> propOrderWedges = new ArrayList<String>();
    //propOrderGeneral.add(propWedgeStoneBool.getName());
    //config.setCategoryPropertyOrder(CATEGORY_NAME_WEDGES, propOrderWedges);


    // ---- step 3 - read the configuration property values into the class's variables (if readFieldsFromConfig) -------------------

    // As each value is read from the property, it should be checked to make sure it is valid, in case someone
    //   has manually edited or corrupted the value.  The get() methods don't check that the value is in range even
    //   if you have specified a MIN and MAX value of the property

    if (readFieldsFromConfig) {
      //If getInt cannot get an integer value from the config file value of myInteger (e.g. corrupted file)
      // it will set it to the default value passed to the function
      



      for (ConfigInfo item : ConfigInfo.values() ){
      	if( item.getMod()==ModType.MOD_MISSING_PIECES ||
        		((item.getMod()==ModType.MOD_BASE_METALS) && (baseMetalsLoaded == true)) ||
        		((item.getMod()==ModType.MOD_BIOMES_O_PLENTY) && (biopLoaded == true)) ||
        		((item.getMod()==ModType.MOD_NATURA) && (naturaLoaded == true)) ||
            	((item.getMod()==ModType.MOD_MINERALOGY) && (mineralogyLoaded == true)) ) {

	      	//System.out.println("Enabling "+item.getName()+" which is number "+item.ordinal()+" in the list.");
	      	BlockEnable[item.ordinal()] = ConfigProperty[item.ordinal()].getBoolean();
      	} else {
	      	ConfigValue[item.ordinal()] = ConfigProperty[item.ordinal()].getInt();

      	}
      }
      
    }

    // ---- step 4 - write the class's variables back into the config properties and save to disk -------------------

    //  This is done even for a loadFromFile==true, because some of the properties may have been assigned default
    //    values if the file was empty or corrupt.





	
    for (ConfigInfo item : ConfigInfo.values() ){
    	if( item.getMod()==ModType.MOD_MISSING_PIECES ||
        		((item.getMod()==ModType.MOD_BASE_METALS) && (baseMetalsLoaded == true)) ||
        		((item.getMod()==ModType.MOD_BIOMES_O_PLENTY) && (biopLoaded == true)) ||
        		((item.getMod()==ModType.MOD_NATURA) && (naturaLoaded == true)) ||
            	((item.getMod()==ModType.MOD_MINERALOGY) && (mineralogyLoaded == true)) ) {

	      	//System.out.println("Enabling "+item.getName()+" which is number "+item.ordinal()+" in the list.");
	      	ConfigProperty[item.ordinal()].set(BlockEnable[item.ordinal()]);
    	} else {
	      	ConfigProperty[item.ordinal()].set(ConfigValue[item.ordinal()]);

    	}
      }

    
    if (config.hasChanged()) {
    	System.out.println("Saving Config");
      config.save();
    }
   
   }
    

  //Define your configuration object
  private static Configuration config = null;

  public static class ConfigEventHandler {
    /*
     * This class, when instantiated as an object, will listen on the FML
     *  event bus for an OnConfigChangedEvent
     */
    @SubscribeEvent(priority = EventPriority.NORMAL)
    public void onEvent(ConfigChangedEvent.OnConfigChangedEvent event) {
      if (MissingPieces.MODID.equals(event.getModID())
              && !event.isWorldRunning()) {
    	  if (event.getConfigID().equals(CATEGORY_NAME_WEDGES)
    			  || event.getConfigID().equals(CATEGORY_NAME_PILLARS)
    			  || event.getConfigID().equals(CATEGORY_NAME_CHAIRS)
    			  || event.getConfigID().equals(CATEGORY_NAME_TABLES)
    			  || event.getConfigID().equals(CATEGORY_NAME_LAMPS)
    			  || event.getConfigID().equals(CATEGORY_NAME_SLABS)
    			  || event.getConfigID().equals(CATEGORY_NAME_CANDELABRAS)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_WEDGES)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_PILLARS)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_CHAIRS)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_TABLES)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_LAMPS)
    			  || event.getConfigID().equals(CATEGORY_NAME_NATURA_CANDELABRAS)
    			  || event.getConfigID().equals(CATEGORY_NAME_BASEM_LAMPS)
    			  || event.getConfigID().equals(CATEGORY_NAME_BASEM_CANDELABRAS)
    			  || event.getConfigID().equals(CATEGORY_NAME_MINERAL_WEDGES)
    			  || event.getConfigID().equals(CATEGORY_NAME_MINERAL_PILLARS)
    			  
    			  || event.getConfigID().equals(CATEGORY_NAME_MISC)) {
          syncFromGUI();
        }
      }
    }
  }


}
